{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","contactForm","field","label","input","type","pattern","title","required","onChange","btn","Component","Filter","ContactListItem","id","onDeleteContact","item","marker","tel","href","onClick","ContactList","contacts","deleteContact","list","map","App","filter","changeFilter","addContact","find","contact","alert","uuidv4","contactId","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ad4efb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__ge8YJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1t4ub\",\"field\":\"ContactForm_field__131BF\",\"label\":\"ContactForm_label__3cD8k\",\"input\":\"ContactForm_input__3JBgz\",\"btn\":\"ContactForm_btn__2LhQA\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={s.field}>\r\n          <span className={s.label}>Name</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.field}>\r\n          <span className={s.label}>Number</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.field}>\r\n      <span className={s.label}>Find contacts by name</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ name, number, id, onDeleteContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.marker}></span>\r\n      <p className={s.name}>{`${name}:`}</p>\r\n      <a className={s.tel} href={`tel:${number}`}>\r\n        {number}\r\n      </a>\r\n      <button\r\n        type=\"button\"\r\n        className={s.btn}\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nexport default function ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = ({ name, number }) => {\n    const isAlreadyInContacts = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n\n    if (isAlreadyInContacts) return alert(`${name} is already in contacts.`);\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1 className=\"phonebookTitle\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2 className=\"contactsTitle\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__ziiyh\",\"marker\":\"ContactListItem_marker__3sjjU\",\"name\":\"ContactListItem_name__HltkK\",\"tel\":\"ContactListItem_tel__2P9CE\",\"btn\":\"ContactListItem_btn__14Xja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Filter_field__lNfRU\",\"label\":\"Filter_label__1GufW\",\"input\":\"Filter_input__3Borx\"};"],"sourceRoot":""}